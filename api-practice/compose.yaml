version: "3.8"
services:
  dynamodb:
    image: amazon/dynamodb-local
    ports:
      - "8042:8000"
    networks:
      - db-net
    volumes:
      - ./volumes/dynamodb-data:/data

  postgresql:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    networks:
      - db-net
    environment:
      POSTGRES_DB: operations
      POSTGRES_USER: operations
      POSTGRES_PASSWORD: operations
    volumes:
      - ./infra/postgres/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql

  prometheus:
    image: prom/prometheus
    restart: always
    networks:
      - monitoring-net
    volumes:
      - ./infra/prometheus:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    user: "472"
    restart: always
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./infra/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./infra/grafana/config.monitoring
    ports:
      - 3000:3000
    networks:
      - monitoring-net
    depends_on:
      - prometheus

networks:
  db-net:
    driver: bridge
  monitoring-net:
    driver: bridge

volumes:
  grafana-data: {}
  prometheus-data: {}
